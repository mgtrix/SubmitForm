{"version":3,"sources":["./src/app/aggiungi-azienda/aggiungi-azienda.component.ts","./src/app/aggiungi-azienda/aggiungi-azienda.component.html","./src/app/services/alert.service.ts","./src/app/lista-aziende/lista-aziende.component.html","./src/app/lista-aziende/lista-aziende.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/submit/submit.component.ts","./src/app/submit/submit.component.html","./src/app/_helpers/fake-backend.ts","./src/app/navigation-header/navigation-header.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/_helpers/index.ts","./src/app/app.module.ts","./src/app/services/authentication.service.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/auth.guard.ts","./src/app/services/user.service.ts","./src/app/services/lista-aziende.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { Agency } from '../models/agency';\nimport { AlertService } from '../services/alert.service';\nimport { ListaAziendeService } from '../services/lista-aziende.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-aggiungi-azienda',\n  templateUrl: './aggiungi-azienda.component.html',\n  styleUrls: ['./aggiungi-azienda.component.css']\n})\nexport class AggiungiAziendaComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder, private alertService: AlertService ,private router: Router, private userService: UserService, private agency: ListaAziendeService) { }\n  registerForm: FormGroup;\n  loading= false;\n  submitted = false;\n  idNumber;\n  \n\n  submit(){\n    console.log('hey')\n    this.agency.agency.push(this.registerForm.value);\n    \n    let dati = this.agency.agency;\n    let datiJson = JSON.stringify(dati)\n    localStorage.setItem('agencies', datiJson)\n    console.log(this.agency.agency)\n    this.submitted = true;\n    this.alertService.clear();\n    if (this.registerForm.invalid) {\n      return;\n    }          \n  }\n\n  ngOnInit(): void {\n    for(let i =0; i < this.agency.agency.length; i++){\n      this.idNumber = i+1;\n      console.log(i)\n    }\n    this.registerForm = this.formBuilder.group({\n      name: new FormControl('', [Validators.required]),\n      subtitle: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      yearofDeploy: new FormControl('', [Validators.required]), \n      imgLink: this.idNumber\n    })\n    \n  }\n  get f() { return this.registerForm.controls; }\n  \n\n}\n","<h3>Aggiungi Azienda</h3>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\n    <!-- name -->\n<p>\n    <mat-form-field class=\"form-field\" appearance=\"legacy\">\n        <mat-label>Name:</mat-label>\n        <input matInput placeholder=\"name\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\">\n        <mat-hint>Input Agency Name</mat-hint>\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <mat-hint *ngIf=\"f.name.errors.required\">Agency Name is required</mat-hint>\n        </div>\n    </mat-form-field>\n</p>\n<p>\n    <mat-form-field class=\"form-field\" appearance=\"legacy\">\n        <mat-label>Subtitle:</mat-label>\n        <input matInput placeholder=\"subtitle\" formControlName=\"subtitle\" [ngClass]=\"{ 'is-invalid': submitted && f.subtitle.errors }\">\n        <mat-hint>Input Agency Subtitle</mat-hint>\n        <div *ngIf=\"submitted && f.subtitle.errors\" class=\"invalid-feedback\">\n            <mat-hint *ngIf=\"f.subtitle.errors.required\">Agency Subtitle is required</mat-hint>\n        </div>\n    </mat-form-field>\n</p>\n<p>\n    <mat-form-field class=\"form-field\" appearance=\"legacy\">\n        <mat-label>Description:</mat-label>\n        <input matInput placeholder=\"description\" formControlName=\"description\" [ngClass]=\"{ 'is-invalid': submitted && f.subtitle.errors }\">\n        <mat-hint>Input Agency Description</mat-hint>\n        <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\n            <mat-hint *ngIf=\"f.description.errors.required\">Agency Description is required</mat-hint>\n        </div>\n    </mat-form-field>\n</p>\n<p>\n    <mat-form-field class=\"form-field\" appearance=\"legacy\">\n        <mat-label>Year Of Deploy:</mat-label>\n        <input matInput placeholder=\"year of deploy\" formControlName=\"yearofDeploy\" [ngClass]=\"{ 'is-invalid': submitted && f.subtitle.errors }\">\n        <mat-hint>Input Agency Yearr of Deploy </mat-hint>\n        <div *ngIf=\"submitted && f.yearofDeploy.errors\" class=\"invalid-feedback\">\n            <mat-hint *ngIf=\"f.yearofDeploy.errors.required\">Agency Year of Deploy is required</mat-hint>\n        </div>\n    </mat-form-field>\n</p>\n</form>\n<div class=\"btnPosition\">\n    <button mat-raised-button color=\"primary\" (click)='submit()' routerLink='/aziende'>\n    Submit\n    </button>\n</div>","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  private subject = new Subject<any>();\n  private keepAfterRouteChange = false;\n\n  constructor(private router: Router) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.keepAfterRouteChange) {\n          this.keepAfterRouteChange = false;\n        } else {\n          this.clear();\n        }\n      }\n    })\n  }\n\n  clear() {\n    this.subject.next();\n  }\n  getAlert(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  success(message: string, keepAfterRouteChange = false) {\n    this.keepAfterRouteChange = keepAfterRouteChange;\n    this.subject.next({ type: 'success', text: message });\n  }\n\n  error(message: string, keepAfterRouteChange = false) {\n    this.keepAfterRouteChange = keepAfterRouteChange;\n    this.subject.next({ type: 'error', text: message });\n  }\n\n}\n","<div mat-card-avatar class=\"avatar\"><p class=\"username\">{{user.username}}</p></div>\n<h2>Lista Aziende</h2>\n\n<div class=\"btnPosition\">\n<button mat-raised-button color=\"primary\" routerLink='/aggiungiazienda'>Aggiungi azienda</button>\n</div>\n\n<div>\n<ng-container *ngFor='let azienda of aziende'>\n<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar  style=\"background-image: url('https://picsum.photos/id/{{azienda.imglink}}/200/200');background-size: cover;\"></div>\n      <mat-card-title>{{azienda.name}}</mat-card-title>\n      <mat-card-subtitle>{{azienda.subtitle}}</mat-card-subtitle>\n    </mat-card-header>\n        <p>{{azienda.yearofDeploy}}</p>\n    <mat-card-content>\n      <p>\n        {{azienda.description}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>\n</ng-container>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Agency } from '../models/agency';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { ListaAziendeService } from '../services/lista-aziende.service';\n\n@Component({\n  selector: 'app-lista-aziende',\n  templateUrl: './lista-aziende.component.html',\n  styleUrls: ['./lista-aziende.component.css']\n})\nexport class ListaAziendeComponent implements OnInit {\n\n  constructor( private listaAziende: ListaAziendeService, private authenticationServ: AuthenticationService) { }\n\n  aziende = this.listaAziende.agency;\n  \n  user = this.authenticationServ.currentUserValue;\n\n  ngOnInit(): void {\n    \n    console.log(this.authenticationServ.currentUserValue)\n    console.log(this.aziende)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authenticationService: AuthenticationService, private router: Router) { }\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n}\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"animate__animated animate__backInDown\">Home</h1>\n\n\n<main>\n    <div >\n        <h3 class=\"animate__animated animate__backInDown\">Congrats You're Logged !!!</h3>\n    </div>\n</main>\n\n<div class=\"btnPosition\">\n<button class=\"btn animate__animated animate__backInUp\"  mat-raised-button color=\"danger\" routerLink='aziende'>ListaAziende</button>\n</div>\n\n<div class=\"image\">\n<img class='animate__animated animate__backInUp' src=\"../../assets/unnamed.jpg\" alt=\"\">\n</div>\n\n<div class=\"btnPosition\">\n    <button class=\"btn animate__animated animate__backInUp\"  mat-raised-button color=\"primary\" (click)=\"logout()\">LogOut</button>\n</div>\n\n<footer class='animate__animated animate__backInUp'>\n    <address>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Labore, tenetur suscipit! Temporibus atque laboriosam ratione inventore vel, itaque ipsum magnam et corrupti facilis porro quod neque vero! Totam, iste id!</address>\n</footer>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators ,FormGroup, FormBuilder} from '@angular/forms';\nimport { AlertService } from '../services/alert.service';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-submit',\n  templateUrl: './submit.component.html',\n  styleUrls: ['./submit.component.css']\n})\nexport class SubmitComponent implements OnInit {\n\n  constructor( private formBuilder: FormBuilder, private alertService: AlertService ,private router: Router, private userService: UserService) { }\n  registerForm: FormGroup;\n  loading= false;\n  submitted = false;\n  \n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      username: new FormControl('', [Validators.required]),\n      name: new FormControl('', [Validators.required]),\n      surname: new FormControl('', [Validators.required]),\n      address: new FormControl('', [Validators.required]),\n      phone: new FormControl('', [Validators.required]),\n      date: new FormControl('', [Validators.required]),\n    })\n    \n  }\n  get f() { return this.registerForm.controls; }\n  submit(){\n    console.log('hey')\n    this.submitted = true;\n    this.alertService.clear();\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.loading = true;\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Registration successful', true);\n                    this.router.navigate(['/login']);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n  }\n\n}\n","<div>\n    <h3>Submit</h3>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\n        <!-- name -->\n    <p>\n        <mat-form-field class=\"form-field\" appearance=\"legacy\">\n            <mat-label>Name:</mat-label>\n            <input matInput placeholder=\"name\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\">\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-hint>Input your Name</mat-hint>\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                <mat-hint *ngIf=\"f.name.errors.required\">First Name is required</mat-hint>\n            </div>\n        </mat-form-field>\n    </p>\n          <!-- surname -->\n    <p>\n        <mat-form-field class=\"form-field\" appearance=\"legacy\">\n            <mat-label>Surname:</mat-label>\n            <input matInput placeholder=\"surname\" formControlName=\"surname\" [ngClass]=\"{ 'is-invalid': submitted && f.surname.errors }\">\n            <mat-hint>Input your Surname</mat-hint>\n            <div *ngIf=\"submitted && f.surname.errors\" class=\"invalid-feedback\">\n                <mat-hint *ngIf=\"f.surname.errors.required\">Surname is required</mat-hint>\n            </div>\n        </mat-form-field>\n    </p>\n            <!-- dateBirth -->\n    <p>\n        <mat-form-field class=\"form-field\" appearance=\"legacy\">\n            <mat-label>Date Birth:</mat-label>\n            <input matInput type=\"date\" placeholder=\"datebirth\" formControlName=\"date\" [ngClass]=\"{ 'is-invalid': submitted && f.date.errors }\">\n            <mat-icon matSuffix>event</mat-icon>\n            <mat-hint>Input your date birth</mat-hint>\n            <div *ngIf=\"submitted && f.date.errors\" class=\"invalid-feedback\">\n                <mat-hint *ngIf=\"f.date.errors.required\">DateBirth is required</mat-hint>\n            </div>\n        </mat-form-field>\n    </p>\n          \n    <p>\n        <mat-form-field class=\"form-field\" appearance=\"legacy\">\n            <mat-label>Address:</mat-label>\n            <input matInput type=\"text\" placeholder=\"address\" formControlName=\"address\">\n            <mat-icon matSuffix>contact_mail</mat-icon>\n            <mat-hint>Input your address</mat-hint>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field class=\"form-field\" appearance=\"legacy\">\n            <mat-label>Email Address:</mat-label>\n            <input matInput placeholder=\"pat@example.com\" formControlName=\"email\" required>\n            <mat-icon matSuffix>mail_outline</mat-icon>\n            <mat-hint>Input the fully qualified email address</mat-hint>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field class=\"form-field\" appearance=\"standard\">\n            <mat-label>Phone Number:</mat-label>\n            <input matInput placeholder=\"Your Phone\"  formControlName=\"phone\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-hint>Phone number with Country code</mat-hint>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Username:</mat-label>\n            <input matInput placeholder=\"Your username\"  formControlName='username'>\n            <mat-icon matSuffix>person_outline</mat-icon>\n            <mat-hint>Use unique username</mat-hint>\n        </mat-form-field>\n    </p>\n\n    <p>\n        <mat-form-field class=\"form-field\" appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input type=\"password\" matInput placeholder=\"Your password\" formControlName=\"password\">\n            <mat-icon matSuffix>lock</mat-icon>\n            <mat-hint>put a password</mat-hint>\n        </mat-form-field>\n    </p>\n    <div class=\"btnPosition\">\n        <button mat-raised-button color=\"primary\" (click)='submit()'>\n        Submit\n        </button>\n    </div>\n    </form>\n    \n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    return deleteUser();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function register() {\n            const user = body\n\n            if (users.find(x => x.username === user.username)) {\n                return error('Username \"' + user.username + '\" is already taken')\n            }\n\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n            users.push(user);\n            localStorage.setItem('users', JSON.stringify(users));\n\n            return ok();\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users);\n        }\n\n        function deleteUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            users = users.filter(x => x.id !== idFromUrl());\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MenuItem } from '../interfaces/menu-item';\n\n\n@Component({\n  selector: 'app-navigation-header',\n  templateUrl: './navigation-header.component.html',\n  styleUrls: ['./navigation-header.component.css']\n})\nexport class NavigationHeaderComponent implements OnInit {\n\n  constructor() { }\n  \n  \n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar fxLayout=\"row\" color=\"primary\">\n  <button  mat-button routerLink='/'>Home</button>\n  <ng-container *ngFor=\"let item of menuItems\">\n  <button mat-button  fxHide.xs routerLink = '{{item.routerLink}}'>\n      <mat-icon class=\"mr\">{{item.icon}}</mat-icon>\n      {{item.label}}\n  </button>\n </ng-container>  \n  <button mat-icon-button [matMenuTriggerFor]=\"dropMenu\" fxHide fxShow.xs>\n      <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #dropMenu=\"matMenu\">\n      <ng-container *ngFor=\"let item of menuItems\">\n          <button mat-menu-item routerLink = '{{item.routerLink}}'>\n              <mat-icon class=\"mr\">{{item.icon}}</mat-icon>\n              {{item.label}}\n          </button>\n          <mat-divider></mat-divider>\n      </ng-container>\n  </mat-menu>\n</mat-toolbar>\n<router-outlet></router-outlet>\n\n ","import { Component } from '@angular/core';\nimport { MenuItem } from './interfaces/menu-item';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SubmitForm';\n  menuItems: MenuItem[]=[\n    {\n      label: 'Sign Up',\n      icon: 'login',\n      routerLink: 'submit'\n    },\n    {\n      label: 'Login',\n      icon: 'login',\n      routerLink: 'login'\n    }\n  ];\n \n}\n","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\nexport * from './fake-backend';","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { fakeBackendProvider } from './_helpers';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SubmitComponent } from './submit/submit.component';\nimport { NavigationHeaderComponent } from './navigation-header/navigation-header.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListaAziendeComponent } from './lista-aziende/lista-aziende.component';\nimport { AggiungiAziendaComponent } from './aggiungi-azienda/aggiungi-azienda.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SubmitComponent,\n    NavigationHeaderComponent,\n    LoginComponent,\n    HomeComponent,\n    ListaAziendeComponent,\n    AggiungiAziendaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatDividerModule,\n    MatMenuModule,\n    MatCardModule,\n    MatGridListModule,\n    FlexLayoutModule\n  \n  ],\n  providers: [ { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n               { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n               fakeBackendProvider \n              ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, config, Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n  login(username, password) {\n    return this.http.post<any>(`${'http://localhost:4000'}/users/authenticate`, { username, password })\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n  logout() {\n    // remove user from local storage and set current user to null\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: { \n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        window.alert('you have to be logged')\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { config } from 'process';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor( private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<User[]>(`${'http://localhost:4000'}/users`)\n  }\n  register(user: User) {\n    return this.http.post(`${'http://localhost:4000'}/users/register`, user);\n}\n\n delete(id: number) {\n    return this.http.delete(`${'http://localhost:4000'}/users/${id}`);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Agency } from '../models/agency';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListaAziendeService {\n\n  constructor() { }\n\n  agency:  Agency[]=[\n    {name: 'LowSrl', subtitle: 'free Agency Flop', description: 'Mauris eu auctor metus. Quisque pulvinar arcu purus, eu bibendum nisl tempor non. Vivamus id velit interdum, pharetra nisi eget, sagittis lacus. Quisque et ligula non leo sagittis mattis et id nisi.', yearofDeploy: 2011, imglink:1},\n    {name: 'FreeSrl', subtitle: 'low Agency Peer', description: 'Cras rhoncus, purus in porttitor efficitur, nibh lorem consectetur tellus, id blandit massa tortor eu nisi. Cras consequat sa', yearofDeploy: 2001, imglink:2},\n    {name: 'Flow-Charts', subtitle: 'Free Peer', description: 'ugue vel blandit lobortis, urna est imperdiet sem, vitae bibendum metus sem eu erat. Nunc vitae purus id ipsum sollicitudin dapibus ut eget diam', yearofDeploy: 2006, imglink:3},\n  ]\n\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SubmitComponent } from './submit/submit.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListaAziendeComponent } from './lista-aziende/lista-aziende.component';\nimport { AggiungiAziendaComponent } from './aggiungi-azienda/aggiungi-azienda.component';\nimport { AuthGuard } from './_helpers';\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent, canActivate: [AuthGuard]},\n  // {path:'home', component: HomeComponent },\n  {path:'submit', component: SubmitComponent},\n  {path:'login', component: LoginComponent},\n  {path:'aziende', component: ListaAziendeComponent},\n  {path:'aggiungiazienda', component: AggiungiAziendaComponent},\n\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from '../services/alert.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private actRoute: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService\n  ) { if(this.authenticationService.currentUserValue){\n    this.router.navigate(['/'])\n  } }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n  });\n  this.returnUrl = this.actRoute.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get f() { return this.loginForm.controls}\n\n  submit(){\n    this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    window.alert('you have to Sign up')\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n  }\n\n}\n","<h3>Login</h3>\n\n<form [formGroup]=\"loginForm\" (ngSumbit)='submit()'>\n<p>\n    <mat-form-field class=\"form-field\" appearance=\"fill\">\n        <mat-label>Username:</mat-label>\n        <input matInput placeholder=\"Your username\" formControlName=\"username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors } \">\n        <mat-icon matSuffix>person_outline</mat-icon>\n        <mat-hint>Use unique username</mat-hint>\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <mat-hint *ngIf=\"f.username.errors.required\">Username is required</mat-hint>\n        </div>\n    </mat-form-field>\n</p>\n\n<p>\n    <mat-form-field class=\"form-field\" appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input type=\"password\" matInput placeholder=\"Your password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors } \">\n        <mat-icon matSuffix>lock</mat-icon>\n        <mat-hint>put your password</mat-hint>\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <mat-hint *ngIf=\"f.password.errors.required\">Password is required</mat-hint>\n        </div>\n    </mat-form-field>\n</p>\n<div class=\"btnPosition\">\n<button class=\"btn\"  mat-raised-button color=\"primary\" (click)='submit()'>Login</button>\n</div>\n</form>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}